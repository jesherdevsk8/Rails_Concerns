image: claretiano/docker:latest

variables:
  DOCKER_DRIVER: overlay2

before_script:
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD

stages:
  - build
  - test
  - deploy

#
# STAGING
#

build:staging:
  stage: build
  only:
    - staging
  script:
    - if [ "$(docker ps -aq -f name=bolsas-mysql-test)" ]; then docker rm -f bolsas-mysql-test; fi
    - docker build . -t claretiano/bolsas:hml --build-arg SSH_PRIVATE_KEY="$(printenv SSH_PRIVATE_KEY)"
    - docker push claretiano/bolsas:hml
    - docker network inspect bolsas-net &>/dev/null || docker network create bolsas-net
    - docker run --name bolsas-mysql-test --network bolsas-net -e MYSQL_ROOT_PASSWORD=SDfoi23eor230i230o -d mysql:5.7 --sql_mode=""

test:staging:
  stage: test
  only:
    - staging
  script:
    - docker pull claretiano/bolsas:hml
    - docker run --name bolsas-test --network bolsas-net --rm claretiano/bolsas:hml bundle exec rails db:drop RAILS_ENV=test
    - docker run --name bolsas-test --network bolsas-net --rm claretiano/bolsas:hml bundle exec rails db:create RAILS_ENV=test
    - docker run --name bolsas-test --network bolsas-net --env-file /home/apps/bolsas/.env-hml --rm claretiano/bolsas:hml bundle exec rails test
    - docker rm -f bolsas-mysql-test

#
# RELEASE
#

build:release:
  stage: build
  only:
    - release
  script:
    - if [ "$(docker ps -aq -f name=bolsas-mysql-test)" ]; then docker rm -f bolsas-mysql-test; fi
    - docker build . -t claretiano/bolsas:hml --build-arg SSH_PRIVATE_KEY="$(printenv SSH_PRIVATE_KEY)"
    - docker push claretiano/bolsas:hml
    - docker network inspect bolsas-net &>/dev/null || docker network create bolsas-net
    - docker run --name bolsas-mysql-test --network bolsas-net -e MYSQL_ROOT_PASSWORD=SDfoi23eor230i230o -d mysql:5.7 --sql_mode=""

test:release:
  stage: test
  only:
    - release
  script:
    - docker pull claretiano/bolsas:hml
    - docker run --name bolsas-test --network bolsas-net --rm claretiano/bolsas:hml bundle exec rails db:drop RAILS_ENV=test
    - docker run --name bolsas-test --network bolsas-net --rm claretiano/bolsas:hml bundle exec rails db:create RAILS_ENV=test
    - docker run --name bolsas-test --network bolsas-net --env-file /home/apps/bolsas/.env-hml --rm claretiano/bolsas:hml bundle exec rails test
    - docker rm -f bolsas-mysql-test


#
# PRODUCTION
#

build:production:
  stage: build
  only:
    - master
  script:
    - if [ "$(docker ps -aq -f name=bolsas-mysql-test)" ]; then docker rm -f bolsas-mysql-test; fi
    - docker build . -t claretiano/bolsas:latest --build-arg SSH_PRIVATE_KEY="$(printenv SSH_PRIVATE_KEY)"
    - docker push claretiano/bolsas:latest
    - docker network inspect bolsas-net &>/dev/null || docker network create bolsas-net
    - docker run --name bolsas-mysql-test --network bolsas-net -e MYSQL_ROOT_PASSWORD=SDfoi23eor230i230o -d mysql:5.7 --sql_mode=""

test:production:
  stage: test
  only:
    - master
  script:
    - docker pull claretiano/bolsas:latest
    - docker run --name bolsas-test --network bolsas-net --rm claretiano/bolsas:latest bundle exec rails db:drop RAILS_ENV=test
    - docker run --name bolsas-test --network bolsas-net --rm claretiano/bolsas:latest bundle exec rails db:create RAILS_ENV=test
    - docker run --name bolsas-test --network bolsas-net --env-file /home/apps/bolsas/.env-production --rm claretiano/bolsas:latest bundle exec rails test
    - docker rm -f bolsas-mysql-test

deploy:production:
  stage: deploy
  only:
    - master
  script:
    # DOCKER RUNNER
    - if [ "$(docker ps -aq -f name=bolsas-production-runner)" ]; then docker rm -f bolsas-production-runner; fi
    - docker pull claretiano/bolsas:latest
    - docker run --name bolsas-production-runner --env-file /home/apps/bolsas/.env-production --rm claretiano/bolsas:latest bundle exec rails db:migrate --trace
    - docker run --name bolsas-production-runner --env-file /home/apps/bolsas/.env-production --volume=/home/apps/bolsas/assets:/bolsas/public/assets claretiano/bolsas:latest bundle exec rake RAILS_ENV=production assets:precompile
    - docker commit bolsas-production-runner claretiano/bolsas:latest
    - docker push claretiano/bolsas:latest
    - if [ "$(docker ps -aq -f name=bolsas-production-runner)" ]; then docker rm -f bolsas-production-runner; fi

    # AWS-DOCKER-01
    - /usr/bin/ssh apps@ha-c.claretiano.edu.br "/bin/echo 'disable server ap-bolsas/aws-docker-01' |socat /var/run/hapee-2.0/hapee-lb-apps.sock stdio"
    - sleep 30
    - eval $(docker-machine env aws-docker-01 --shell /bin/bash)
    - docker pull claretiano/bolsas:latest
    - if [ "$(docker ps -aq -f name=bolsas-production-01)" ]; then docker rm -f bolsas-production-01; fi
    - if [ "$(docker ps -aq -f name=bolsas-sidekiq-01)" ]; then docker rm -f bolsas-sidekiq-01; fi
    - if [ "$(docker ps -aq -f name=bolsas-cron-01)" ]; then docker rm -f bolsas-cron-01; fi
    - docker run --name bolsas-production-01 --hostname aws-docker01-bolsas-01 --restart always --env-file /home/apps/bolsas/.env-production -p "4020:3000" -d claretiano/bolsas:latest bundle exec puma
    - docker run --name bolsas-sidekiq-01 --hostname aws-docker01-bolsas-sidekiq-01 --restart always --env-file /home/apps/bolsas/.env-production -d claretiano/bolsas:latest bundle exec sidekiq -C /bolsas/config/sidekiq.yml
    - docker run --name bolsas-cron-01 --hostname aws-docker01-bolsas-cron-01 --restart always --env-file /home/apps/bolsas/.env-production -d claretiano/bolsas:latest sh -c "/usr/bin/env >> ~/.env && cron && tail -f /var/log/cron.log"
    - eval $(docker-machine env -u --shell /bin/bash)
    - /usr/bin/ssh apps@ha-c.claretiano.edu.br "/bin/echo 'enable server ap-bolsas/aws-docker-01' |socat /var/run/hapee-2.0/hapee-lb-apps.sock stdio"
    - sleep 30

    # Notificar newrelic sobre novo deploy
    - docker run --name bolsas-production-runner --env-file /home/apps/bolsas/.env-production --rm --volume=/home/apps/bolsas/assets:/bolsas/public/assets --volume=/home/apps/bolsas/tmp:/bolsas/tmp claretiano/bolsas:latest bundle exec newrelic deployment --user="$(printenv GITLAB_USER_NAME)"

    # AWS-DOCKER-02
    - /usr/bin/ssh apps@ha-c.claretiano.edu.br "/bin/echo 'disable server ap-bolsas/aws-docker-02' |socat /var/run/hapee-2.0/hapee-lb-apps.sock stdio"
    - sleep 30
    - eval $(docker-machine env aws-docker-02 --shell /bin/bash)
    - docker pull claretiano/bolsas:latest
    - if [ "$(docker ps -aq -f name=bolsas-production-02)" ]; then docker rm -f bolsas-production-02; fi
    - if [ "$(docker ps -aq -f name=bolsas-sidekiq-02)" ]; then docker rm -f bolsas-sidekiq-02; fi
    - docker run --name bolsas-production-02 --hostname aws-docker02-bolsas-02 --restart always --env-file /home/apps/bolsas/.env-production -p "4020:3000" -d claretiano/bolsas:latest bundle exec puma
    - docker run --name bolsas-sidekiq-02 --hostname aws-docker02-bolsas-sidekiq-02 --restart always --env-file /home/apps/bolsas/.env-production -d claretiano/bolsas:latest bundle exec sidekiq -C /bolsas/config/sidekiq.yml
    - eval $(docker-machine env -u --shell /bin/bash)
    - /usr/bin/ssh apps@ha-c.claretiano.edu.br "/bin/echo 'enable server ap-bolsas/aws-docker-02' |socat /var/run/hapee-2.0/hapee-lb-apps.sock stdio"
